// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  ProcurementOfficer
  Researcher
}

enum Category {
  Reagent
  Sample
}

model User {
  id                      Int     @id @default(autoincrement())
  firstName               String
  lastName                String
  email                   String  @unique
  password                String
  role                    Role
  isPasswordResetRequired Boolean  @default(false)
  sessions Session[]  @ignore
}

model Session {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique 
  isLoggedIn    Boolean
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  refreshToken  String   @unique

  @@index([refreshToken])  
}

model Reagent {
  id            Int      @id @default(autoincrement())
  name          String
  casNumber     String
  producer      String
  catalogId     String
  catalogLink   String
  pricePerUnit  Float
  quantityUnit  String
  totalQuantity Float
  description   String
  quantityLeft  Float
  expirationDate  DateTime
  storageId     Int
  category      Category
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  storage       Storage  @relation(fields: [storageId], references: [id])
}

model Storage {
  id          Int      @id @default(autoincrement())
  roomId      Int
  room        Room     @relation(fields: [roomId], references: [id])
  name        String   
  description String?  
  reagents    Reagent[] 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([roomId, name]) 
}

model Room {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String?         
  storages   Storage[] 
}


